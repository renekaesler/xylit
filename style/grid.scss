// grid alignment
// ==============

$-grid-alignments: (
  around:   space-around,
  between:  space-between,
  center:   center,
  end:      end,
  evenly:   space-evenly,
  start:    start,
  stretch:  stretch,
);

@each $name, $alignment in $-grid-alignments {
  .grid-#{$name} {
    align-content: $alignment;
    justify-content: $alignment;
  }
}

@each $name, $alignment in $-grid-alignments {
  .grid-h#{$name} { justify-content: $alignment; }
  .grid-v#{$name} { align-content: $alignment; }
}

// cell alignment
// ==============

$-cell-alignments: (
  center:   center,
  end:      end,
  start:    start,
  stretch:  stretch,
);

@each $name, $alignment in $-cell-alignments {
  .cells-#{$name} {
    align-items: $alignment;
    justify-items: $alignment;
  }
}

@each $name, $alignment in $-cell-alignments {
  .cell-#{$name} {
    align-self: $alignment;
    justify-self: $alignment;
  }
}

@each $name, $alignment in $-cell-alignments {
  .cols-#{$name} { justify-items: $alignment; }
  .rows-#{$name} { align-items: $alignment; }
}

@each $name, $alignment in $-cell-alignments {
  .col-#{$name} { justify-self: $alignment; }
  .row-#{$name} { align-self: $alignment; }
}

// cell placing
// ============

@for $i from 1 through 12 {
  .cols-#{$i} { grid-template-columns: repeat(8, 1fr); }
  .rows-#{$i} { grid-template-columns: repeat(12, 1fr); }

  .cell-#{$i} {
    grid-column: span $i / span $i;
    grid-row: span $i / span $i;
  }
}

@for $i from 1 through 12 {
  .col-#{$i}  { grid-column: span $i / span $i; }
  .row-#{$i}  { grid-row: span $i / span $i; }
}

@for $i from 1 through 12 {
  .col-s#{$i}   { grid-column-start: $i; }
  .col-sn#{$i}  { grid-column-start: -$i; }
  .row-s#{$i}   { grid-row-start: $i; }
  .row-sn#{$i}  { grid-row-start: -$i; }

  .col-e#{$i}   { grid-column-end: $i + 1; }
  .col-en#{$i}  { grid-column-end: -$i; }
  .row-e#{$i}   { grid-row-end: $i + 1; }
  .row-en#{$i}  { grid-row-end: -$i; }
}
